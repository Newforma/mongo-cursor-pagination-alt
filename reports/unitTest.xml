<?xml version="1.0" encoding="UTF-8"?>
<testsuites version="1">
    <testsuite name="normalizeDirectionParams" tests="9" failures="0" errors="0" timestamp="2021-01-29T21:50:11.053Z" time="0.019000000000000003">
        <testcase classname="buildCursor" name="buildCursor preserves same order of keys as in `sort`" time="0.006"/>
        <testcase classname="buildCursor" name="buildCursor understands dot notation" time="0.002"/>
        <testcase classname="encodeCursor" name="encodeCursor encodes correctly" time="0.001"/>
        <testcase classname="decodeCursor" name="decodeCursor decodes correctly" time="0.002"/>
        <testcase classname="buildQueryFromCursor" name="buildQueryFromCursor generates the correct query" time="0.003"/>
        <testcase classname="normalizeDirectionParams" name="normalizeDirectionParams works well without parameters" time="0.001"/>
        <testcase classname="normalizeDirectionParams" name="normalizeDirectionParams works well when paginating forwards" time="0.001"/>
        <testcase classname="normalizeDirectionParams" name="normalizeDirectionParams works well when paginating backwards" time="0.001"/>
        <testcase classname="normalizeDirectionParams" name="normalizeDirectionParams clamps `limit` to a minimum" time="0.002"/>
    </testsuite>
    <testsuite name="aggregatePaginated" tests="4" failures="0" errors="0" timestamp="2021-01-29T21:50:11.053Z" time="0.07100000000000001">
        <testcase classname="aggregatePaginated" name="aggregatePaginated paginates forwards and backwards with a custom `sort`" time="0.053"/>
        <testcase classname="aggregatePaginated" name="aggregatePaginated uses `_id` as tie-breaker when there are duplicated values on sorted field" time="0.009"/>
        <testcase classname="aggregatePaginated" name="aggregatePaginated behaves well when there are no results" time="0.004"/>
        <testcase classname="aggregatePaginated" name="aggregatePaginated allows the use of dot notation in `sort`" time="0.005"/>
    </testsuite>
    <testsuite name="findPaginated" tests="6" failures="0" errors="0" timestamp="2021-01-29T21:50:11.053Z" time="0.07900000000000001">
        <testcase classname="findPaginated" name="findPaginated paginates forwards and backwards with a custom `sort`" time="0.052"/>
        <testcase classname="findPaginated" name="findPaginated uses `_id` as tie-breaker when there are duplicated values on sorted field" time="0.008"/>
        <testcase classname="findPaginated" name="findPaginated filters results with the given `query`" time="0.006"/>
        <testcase classname="findPaginated" name="findPaginated limits fields according to the given `projection`" time="0.003"/>
        <testcase classname="findPaginated" name="findPaginated behaves well when there are no results" time="0.003"/>
        <testcase classname="findPaginated" name="findPaginated allows the use of dot notation in `sort`" time="0.007"/>
    </testsuite>
</testsuites>